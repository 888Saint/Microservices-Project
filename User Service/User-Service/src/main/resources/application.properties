spring.application.name=User-Service

server.port = 8081

#database configurations
spring.datasource.url=jdbc:mysql://localhost:3306/microservices
spring.datasource.username=root
spring.datasource.password=1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


#this will show the sql queries running in console
spring.jpa.show-sql=true
#for automatically updating database after every change
spring.jpa.hibernate.ddl-auto=update
#It helps to map java data types to sql data types
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#Config client set up
spring.config.import=optional:configserver:http://localhost:8086
spring.profiles.active=prod

#Eureka config
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Enable health check for Circuit Breakers
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.ratingHotelBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.sliding-window-size=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.sliding-window-type=COUNT_BASED
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slow-call-duration-threshold=2s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automatic-transition-from-open-to-half-open-enabled=true

# Enable exponential backoff (optional)
resilience4j.retry.instances.ratingHotelService.max-attempts=3
resilience4j.retry.instances.ratingHotelService.wait-duration=5s
#resilience4j.retry.instances.ratingHotelService.exponential-backoff-multiplier=2

#Rate Limiter Config
resilience4j.ratelimiter.instances.userRateLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.userRateLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.userRateLimiter.timeout-duration=0s